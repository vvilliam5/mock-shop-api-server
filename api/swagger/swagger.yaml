swagger: "2.0"
info:
  version: "1.0.0"
  title: "mock-shop-api-server"
host: "mock-shop-api.herokuapp.com"
basePath: /
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /users:
    get:
      description: "Get list of all users and admins in the system"
      summary: "Get Users"
      operationId: "GetUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "401":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
  /users/login:
    post:
      description: "Sign in with email and password to get token for authorization"
      summary: "Sign In"
      operationId: "SignIn"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "login details"
        in: "body"
        description: "login details, email and password, this returns the authentication token"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
  /users/signup:
    post:
      description: "Sign up for new account"
      summary: "Sign Up"
      operationId: "SignUp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sign up details"
        in: "body"
        description: "signup details to create new account, email must not have been used"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
  /users/{id}/cart:
    get:
      description: "View all products in users Cart"
      summary: "View Cart"
      operationId: "ViewCart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of user"
        required: true
        schema:
          type: "integer"      
      - name: "Authorization"
        in: "header"
        description: "authentication token"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
  /users/{id}/cart/{pID}:
    post:
      description: "Add Product to users cart"
      summary: "Add product to cart"
      operationId: "AddProducttoCart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of user"
        required: true
        schema:
          type: "integer"
      - name: "pID"
        in: "path"
        description: "id of product"
        required: true
        schema:
          type: "integer"
      - name: "Authorization"
        in: "header"
        description: "authentication token"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
    delete:
      description: "delete a product from cart"
      summary: "Delete Product from Cart By Id"
      operationId: "DeleteProductFromCartById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of user"
        required: true
        schema:
          type: "integer"
      - name: "pID"
        in: "path"
        description: "id of product"
        required: true
        schema:
          type: "integer"
      - name: "Authorization"
        in: "header"
        description: "authentication token"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
  /products:
    get:
      description: "Get all products, authenticated by token returned upon succesful login"
      summary: "Get Products"
      operationId: "GetProducts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "authentication token"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
    post:
      description: "create new product"
      summary: "Create Product"
      operationId: "AddProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "authentication token"
        required: true
        schema:
          type: "object"
      - name: "product details"
        in: "body"
        description: "product details"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
  /products/{id}:
    get:
      description: "Get a product by id, authenticated by token returned upon succesful login"
      summary: "Get Product By Id"
      operationId: "GetProductById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of product"
        required: true
        schema:
          type: "integer"
      - name: "Authorization"
        in: "header"
        description: "authentication token"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
    put:
      description: "update a product details"
      summary: "Update Product By Id"
      operationId: "UpdateProductById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of product"
        required: true
        schema:
          type: "integer"
      - name: "Authorization"
        in: "header"
        description: "authentication token"
        required: true
        schema:
          type: "object"
      - name: "updated product details"
        in: "body"
        description: "updated product details"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
    delete:
      description: "delete a product"
      summary: "Delete Product By Id"
      operationId: "DeleteProductById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of product"
        required: true
        schema:
          type: "integer"
      - name: "Authorization"
        in: "header"
        description: "authentication token"
        required: true
        schema:
          type: "object"
      responses:
          "200":
            description: "Success"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"
          "400":
            description: "Error Bad Request"
            schema:
              type: "object"
              properties:
                status:
                  type: "string"
                data:
                  type: "object"